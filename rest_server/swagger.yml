swagger: "2.0"
info:
  description: The swagger file for the PeopleRecords server.
  version: "1.0.0"
  title: Swagger REST
consumes:
  - "application/json"
produces:
  - "application/json"

basePath: "/api"

# Paths supported by the server application:
# • POST /records - Post a single data line in any of the 3 formats supported by your existing code
# • GET /records/gender - returns records sorted by gender
# • GET /records/birthdate - returns records sorted by birthdate
# • GET /records/name - returns records sorted by name
paths:
  /records/birthdate:
    get:
      operationId: "records.sorted_birthdate"
      tags:
        - "People"
      summary: "The people data structure supported by the server application"
      description: "Read the list of people, sorted by birthdate"
      responses:
        200:
          description: "Successful read people, sorted by birthdate"
          schema:
            type: object
            properties:
              line:
                type: "string"
  /records/gender:
    get:
      operationId: "records.sorted_gender"
      tags:
        - "People"
      summary: "The people data structure supported by the server application"
      description: "Read the list of people, sorted by gender then last name"
      responses:
        200:
          description: "Successful read people, sorted by gender then last name"
          schema:
            type: object
            properties:
              line:
                type: "string"
  /records/name:
    get:
      operationId: "records.sorted_name"
      tags:
        - "People"
      summary: "The people data structure supported by the server application"
      description: "Read the list of people, sorted by last name"
      responses:
        200:
          description: "Successful read people, sorted by last name"
          schema:
            type: object
            properties:
              line:
                type: "string"

  /records:
    post:
      operationId: records.create
      tags:
        - "People"
      summary: Create a person and add to the people list
      description: Create a new person in the people list
      parameters:
        - name: person
          in: body
          description: Person to create
          required: True
          schema:
            type: object
            properties:
              line:
                type: "string"
                description: line from a csv, psv, or ssv file (LastName | FirstName | Gender | FavoriteColor | DateOfBirth)
      responses:
        201:
          description: Successfully created person in list
